# Stage 1: Base image with R and renv
FROM rocker/r-ver:4.4.1 AS base

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    jq \
    sudo \
    libcurl4-gnutls-dev \
    libcairo2-dev \
    libxt-dev \
    libssl-dev \
    libssh2-1-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables for Bioconductor
ENV BIOCONDUCTOR_VERSION=3.19
ENV R_BIOC_VERSION=$BIOCONDUCTOR_VERSION

# Set the Bioconductor repository URL
RUN echo 'options(BioC_mirror="https://bioconductor.org")' >> /usr/local/lib/R/etc/Rprofile.site
RUN echo 'options(repos = BiocManager::repositories())' >> /usr/local/lib/R/etc/Rprofile.site


# Check R version and session information
RUN R --version
RUN R -e "sessionInfo()"

# Install BiocManager package with retries
RUN R -e "options(repos = c(CRAN = 'https://cran.rstudio.com')); \
          tryCatch(install.packages('BiocManager', dependencies=TRUE, verbose=TRUE), error=function(e) { \
          Sys.sleep(5); \
          install.packages('BiocManager', dependencies=TRUE, verbose=TRUE) \
          })"

# Install renv package with retries
RUN R -e "options(repos = c(CRAN = 'https://cran.rstudio.com')); \
          tryCatch(install.packages('renv', dependencies=TRUE, verbose=TRUE), error=function(e) { \
          Sys.sleep(5); \
          install.packages('renv', dependencies=TRUE, verbose=TRUE) \
          })"

# Install new package
# RUN R -e "install.packages('renv')"

# Install BiocManager package
#RUN R -e "install.packages('BiocManager', repos = 'https://cran.rstudio.com')"


# Install renv package and diagnose issues if any
#RUN R -e "options(repos = c(CRAN = 'https://cran.rstudio.com')); install.packages('renv')"

# Set working directory
WORKDIR /home/app

# Copy only the renv-related files first
COPY renv.lock renv.lock
COPY .Rprofile .Rprofile
COPY renv/activate.R renv/activate.R

# Make sure cache directory exists
RUN mkdir -p /home/app/renv/cache

# Set the RENV_PATHS_CACHE environment variable to the shared cache
ENV RENV_PATHS_CACHE=/home/app/renv/cache

# Restore the renv environment
RUN R -e "renv::restore()"

# Now copy the rest of the application files
COPY . .

# Now run the markdown
FROM rocker/r-ver:latest

RUN apt-get update && apt-get install -y \
    libcurl4-openssl-dev \
    libssl-dev \
    libxml2-dev \
    pandoc

RUN R -e "install.packages('rmarkdown')"

# Create a new group and user for running the application
RUN groupadd --system app && useradd --system --gid app app

# Set the working directory
WORKDIR /home/app

# Copy the pre-loaded R packages from the base image
COPY --from=base /home/app .

# Change ownership of the app directory to the app user
RUN chown -R app:app /home/app

# Switch to the app user
USER app

# Expose port 3838 for the Shiny app
EXPOSE 80

CMD ["R", "-e", "rmarkdown::render('/home/app/EarlyGestation_RNAseq.Rmd', output_file = '/EarlyGestation_RNAseq.html')"]

